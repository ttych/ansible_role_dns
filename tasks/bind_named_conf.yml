---

- name: create named db dirs
  file:
    path: "{{ dns_bind_conf_dir }}/{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    state: directory
  loop:
    - { path: master, owner: root, group: "{{ dns_bind_group }}", mode: "0750" }
    - { path: master/in, owner: root, group: "{{ dns_bind_group }}", mode: "0750" }
    - { path: master/out, owner: root, group: "{{ dns_bind_group }}", mode: "0750" }
    - { path: slave, owner: "{{ dns_bind_user }}", group: "{{ dns_bind_group }}", mode: "0750" }
    - { path: working, owner: "{{ dns_bind_user }}", group: "{{ dns_bind_group }}", mode: "0750" }
    - { path: dynamic, owner: "{{ dns_bind_user }}", group: "{{ dns_bind_group }}", mode: "0750" }

- name: deploy standard master db
  copy:
    src: "named/master/{{ item.name }}"
    dest: "{{ dns_bind_conf_dir }}/master/{{ item.name }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { name: empty.db, owner: root, group: "{{ root_group }}", mode:
  "0644" }
    - { name: localhost-forward.db, owner: root, group: "{{ root_group }}", mode:
  "0644" }
    - { name: localhost-reverse.db, owner: root, group: "{{ root_group }}", mode:
  "0644" }

- name: deploy bind.keys from internet
  get_url:
    url: "{{ dns_bind_keys_url }}"
    dest: "{{ dns_bind_conf_dir }}/bind.keys"
    mode: '0644'
    owner: root
    group: "{{ root_group }}"
  failed_when: false
  register: t_bind_keys_internet

- name: deploy bind.keys from local copy
  copy:
    src: "named/{{ dns_bind_keys_name }}"
    dest: "{{ dns_bind_conf_dir }}/bind.keys"
    owner: root
    group: "{{ root_group }}"
    mode: "0644"
  when: t_bind_keys_internet.failed or t_bind_keys_internet.status_code != 200

- name: deploy named.root from internet
  get_url:
    url: "{{ dns_bind_named_root_url }}"
    dest: "{{ dns_bind_conf_dir }}/named.root"
    mode: '0644'
    owner: root
    group: "{{ root_group }}"
  failed_when: false
  register: t_named_root_internet

- name: deploy named.root from local copy
  copy:
    src: "named/{{ dns_bind_named_root_name }}"
    dest: "{{ dns_bind_conf_dir }}/named.root"
    owner: root
    group: "{{ root_group }}"
    mode: "0644"
    when: t_named_root_internet.failed or (t_named_root_internet.status_code is defined and t_named_root_internet.status_code != 200)

- name: check rndc.key status
  stat:
    path: "{{ dns_bind_conf_dir }}/rndc.key"
  register: t_stat_rndc_key

- name: deploy rndc.key
  command: rndc-confgen -a -A hmac-sha512 -c "{{ dns_bind_conf_dir }}/rndc.key" -k local
  when: t_stat_rndc_key.stat.exists == false

- name: fix rndc.key permission
  file:
    path: "{{ dns_bind_conf_dir }}/rndc.key"
    owner: root
    group: "{{ dns_bind_group }}"
    mode: "0640"

- name: get rndc.key content
  command: cat "{{ dns_bind_conf_dir }}/rndc.key"
  changed_when: false
  register: t_dns_bind_rndc_key_content

- name: deploy rndc.conf
  template:
    src: "named/rndc.conf"
    dest: "{{ dns_bind_conf_dir }}/rndc.conf"
    owner: root
    group: "{{ root_group }}"
    mode: "0644"

- name: check named.conf status
  stat:
    path: "{{ dns_bind_conf_dir }}/named.conf"
  register: t_stat_named_conf

- name: deploy named.conf
  template:
    src: "named/named.conf"
    dest: "{{ dns_bind_conf_dir }}/named.conf"
    owner: root
    group: "{{ root_group }}"
    mode: "0644"
  when: t_stat_named_conf.stat.exists == false

- name: today as serial number
  set_fact:
    t_dns_today_serial: "{{ '%Y%m%d01' | strftime }}"

- name: check in/local db
  stat:
    path: "{{ dns_bind_conf_dir }}/master/in/local"
  register: t_stat_named_in_local_db

- name: deploy in/local db
  template:
    src: "named/master/in/local"
    dest: "{{ dns_bind_conf_dir }}/master/in/local"
    owner: root
    group: "{{ dns_bind_group }}"
    mode: "0640"
  when: t_stat_named_in_local_db.stat.exists == false

- name: check in/0.168.192 db
  stat:
    path: "{{ dns_bind_conf_dir }}/master/in/0.168.192.in-addr.arpa"
  register: t_stat_named_in_0_168_192_db

- name: deploy in/0.168.192 db
  template:
    src: "named/master/in/0.168.192.in-addr.arpa"
    dest: "{{ dns_bind_conf_dir }}/master/in/0.168.192.in-addr.arpa"
    owner: root
    group: "{{ dns_bind_group }}"
    mode: "0640"
  when: t_stat_named_in_0_168_192_db.stat.exists == false

- name: check conf
  command: named-checkconf "{{ dns_bind_conf_dir }}/named.conf"
  changed_when: false
  failed_when: false
  register: t_named_checkconf

- debug:
    msg: "{{ t_named_checkconf }}"
  when: t_named_checkconf.failed
